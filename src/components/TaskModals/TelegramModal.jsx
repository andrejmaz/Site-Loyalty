import { useState, useEffect } from 'react';
import Modal from '../Modal';
import { apiService } from '../../services/apiService';
import webAppManager from '../../services/webAppManager';
import createConfetti from '../../services/createConfetti';

/**
 * –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ Telegram
 */
const TelegramModal = ({ isOpen, onClose, onSuccess }) => {
    const [loading, setLoading] = useState(false);
    const [isSubscribed, setIsSubscribed] = useState(false);
    const [message, setMessage] = useState('–ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞—à—É –ø–æ–¥–ø–∏—Å–∫—É...');

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª–∫–∏
    useEffect(() => {
        if (isOpen) {
            checkSubscription();
        }
    }, [isOpen]);

    const checkSubscription = async () => {
        setLoading(true);
        setMessage('–ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞—à—É –ø–æ–¥–ø–∏—Å–∫—É...');

        try {
            const result = await apiService.checkTelegramSubscription();

            if (result && result.subscription) {
                setIsSubscribed(true);
                setMessage('–û—Ç–ª–∏—á–Ω–æ! –í—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª.');
                webAppManager.hapticSuccess();
            } else {
                setIsSubscribed(false);
                setMessage('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à Telegram-–∫–∞–Ω–∞–ª –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–Ω—É—Å–∞.');
                webAppManager.hapticWarning();
            }
        } catch (error) {
            setMessage('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏.');
            webAppManager.hapticError();
        } finally {
            setLoading(false);
        }
    };

    const handleClaimBonus = async () => {
        setLoading(true);
        try {
            const result = await apiService.claimTelegramSubscription();

            if (result && result.status === true) {
                webAppManager.hapticSuccess();
                onSuccess?.('üéâ', '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!', '–ë–æ–Ω—É—Å –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ Telegram-–∫–∞–Ω–∞–ª –Ω–∞—á–∏—Å–ª–µ–Ω!');
                createConfetti();
                onClose();
            } else {
                webAppManager.hapticWarning();
                onSuccess?.('‚è∞', '–£–∂–µ –ø–æ–ª—É—á–µ–Ω', '–ë–æ–Ω—É—Å –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ Telegram-–∫–∞–Ω–∞–ª —É–∂–µ –ø–æ–ª—É—á–µ–Ω!');
            }
        } catch (error) {
            webAppManager.hapticError();
            onSuccess?.('‚ùå', '–û—à–∏–±–∫–∞', '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –±–æ–Ω—É—Å–∞ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ Telegram-–∫–∞–Ω–∞–ª');
            onClose();
        }
    };

    const handleSubscribe = () => {
        if (webAppManager.isWebApp()) {
            window.Telegram.WebApp.openTelegramLink('https://t.me/bronks_wear');
        } else {
            window.open('https://t.me/bronks_wear', '_blank');
        }
        webAppManager.hapticImpact();
    };

    return (
        <Modal isOpen={isOpen} onClose={onClose} size="sm">
            <div className="text-center space-y-4">
                <div className="text-6xl mb-4">üì±</div>
                <h3 className="text-xl font-bold font-unbounded">–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ Telegram</h3>
                <p className="text-gray-600">{message}</p>
                <div className="space-y-3">
                    {loading ? (
                        <div className="flex items-center justify-center">
                            <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-gray-900"></div>
                        </div>
                    ) : isSubscribed ? (
                        <button 
                            onClick={handleClaimBonus}
                            className="bg-black text-white px-8 py-3 rounded-lg font-bold w-full hover:bg-gray-800 transition-all duration-300"
                        >
                            –ü–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å
                        </button>
                    ) : (
                        <>
                            <button 
                                onClick={handleSubscribe}
                                className="bg-blue-500 text-white px-8 py-3 rounded-lg font-bold w-full hover:bg-blue-600 transition-all duration-300 mb-3"
                            >
                                –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª
                            </button>
                            <button 
                                onClick={checkSubscription}
                                className="bg-gray-200 text-gray-700 px-8 py-3 rounded-lg font-bold w-full hover:bg-gray-300 transition-all duration-300"
                            >
                                –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É
                            </button>
                        </>
                    )}
                </div>
            </div>
        </Modal>
    );
};

export default TelegramModal;
