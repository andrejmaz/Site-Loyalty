{"createdAt":"2025-10-04T11:08:32.250Z","updatedAt":"2025-10-08T09:39:26.122Z","id":"inI5lJgGcwJ2gmYk","name":"3. Complete task (manual)","active":false,"isArchived":false,"nodes":[{"parameters":{"operation":"executeQuery","query":"-- ШАГ 4: Обработка успешного webhook (для verification_type = 'manual')\n-- Завершение задачи после проверки менеджером\n-- Параметры: \n--   $1 - user_task_id или salebot_order_id (в зависимости от логики)\n--   $2 - поиск по 'id' или 'salebot_order_id'\n--   $3 - custom_points (необязательно, NULL = использовать points_awarded из задания)\n\nWITH user_task_info AS (\n    SELECT \n        ut.id,\n        ut.user_id,\n        ut.task_id,\n        ut.points_awarded,\n        t.title,\n        t.system_name,\n        -- Используем custom_points если передан, иначе points_awarded из задания\n        COALESCE($3, ut.points_awarded) as final_points\n    FROM user_tasks ut\n    JOIN tasks t ON t.id = ut.task_id\n    WHERE \n        CASE \n            WHEN $2 = 'id' THEN ut.id = $1\n            WHEN $2 = 'salebot_order_id' THEN ut.salebot_order_id = $1\n        END\n        AND ut.status = 'pending'\n),\nupdate_task AS (\n    UPDATE user_tasks \n    SET \n        status = 'approved',\n        completed_at = NOW(),\n        verified_at = NOW(),\n        -- Обновляем points_awarded если передан custom_points\n        points_awarded = COALESCE($3, points_awarded)\n    WHERE \n        CASE \n            WHEN $2 = 'id' THEN id = $1\n            WHEN $2 = 'salebot_order_id' THEN salebot_order_id = $1\n        END\n        AND status = 'pending'\n    RETURNING id, user_id\n),\nadd_transaction AS (\n    INSERT INTO point_transactions (\n        user_id,\n        amount,\n        transaction_type,\n        description,\n        task_id,\n        user_task_id,\n        created_at\n    )\n    SELECT \n        uti.user_id,\n        uti.final_points,\n        'task_reward',\n        uti.title,\n        uti.task_id,\n        uti.id,\n        NOW()\n    FROM user_task_info uti\n    WHERE EXISTS (SELECT 1 FROM update_task)\n    RETURNING id, amount\n),\nupdate_balance AS (\n    UPDATE users \n    SET card_balance = card_balance + (SELECT final_points FROM user_task_info)\n    WHERE id = (SELECT user_id FROM user_task_info)\n      AND EXISTS (SELECT 1 FROM update_task)\n    RETURNING id, card_balance, first_name\n)\n-- Используем COALESCE для гарантированного возврата результата\nSELECT \n    COALESCE(\n        (SELECT jsonb_build_object(\n            'status', true,\n            'message', 'Задание проверено и одобрено! Бонус начислен',\n            'user_id', ut.user_id,\n            'user_name', ub.first_name,\n            'points_awarded', uti.final_points,\n            'new_balance', ub.card_balance,\n            'task_title', uti.title\n        )\n        FROM update_task ut\n        LEFT JOIN user_task_info uti ON true\n        LEFT JOIN update_balance ub ON true),\n        jsonb_build_object(\n            'status', false,\n            'message', 'Задание не найдено или уже обработано',\n            'user_id', NULL,\n            'user_name', NULL,\n            'points_awarded', NULL,\n            'new_balance', NULL,\n            'task_title', NULL\n        )\n    ) as result;","options":{"queryReplacement":"={{ [ $('Task').first().json.order_id, 'salebot_order_id', $('ParseInfo').first().json?.data?.result?.budget || null ] }}"}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[416,0],"id":"33339724-58ee-4bfe-bcb4-756b4e7cc14a","name":"Execute a SQL query","alwaysOutputData":false,"credentials":{"postgres":{"id":"IRbGwCxyepb2OPlB","name":"Postgres"}}},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"d372bb48-b2e0-4a5d-9ba9-3f7331d9d9e8","leftValue":"={{ $json.result.status }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[608,0],"id":"a753e115-5051-4f07-baa6-c63b9c144351","name":"status = true"},{"parameters":{"method":"POST","url":"https://chatter.salebot.pro/api/5c8e62a703419c398e391b4749b542b2/set_order_vars","sendBody":true,"bodyParameters":{"parameters":[{"name":"client_id","value":"={{ $('Task').first().json.client_id }}"},{"name":"order_id","value":"={{ $('Task').first().json.order_id }}"},{"name":"variables","value":"={{ {\"error\": $('Execute a SQL query').first().json.result.message || 'Произошла ошибка' } }}"}]},"options":{"batching":{"batch":{"batchSize":10,"batchInterval":200}}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[880,112],"id":"848caff9-9714-4d25-9a28-8d29358dc765","name":"Add Error","retryOnFail":true,"maxTries":5,"waitBetweenTries":5000},{"parameters":{"method":"POST","url":"https://chatter.salebot.pro/api/5c8e62a703419c398e391b4749b542b2/callback","sendBody":true,"bodyParameters":{"parameters":[{"name":"client_id","value":"={{ $('Task').first().json.client_id }}"},{"name":"message","value":"=completed_order_{{ $('Task').item.json.order_id }}"}]},"options":{"batching":{"batch":{"batchSize":10,"batchInterval":200}}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[864,-128],"id":"aca3060b-8390-4233-b5d6-5ec4191d58a0","name":"Close Order","retryOnFail":true,"maxTries":5,"waitBetweenTries":5000},{"parameters":{"method":"POST","url":"https://chatter.salebot.pro/api/5c8e62a703419c398e391b4749b542b2/get_order_vars","sendBody":true,"bodyParameters":{"parameters":[{"name":"client_id","value":"={{ $('Task').first().json.client_id }}"},{"name":"order_id","value":"={{ $('Task').first().json.order_id }}"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[-432,0],"id":"2a41503f-5424-4e3a-8d46-7f69b7ede352","name":"Get Order Info","retryOnFail":false,"maxTries":5,"waitBetweenTries":5000},{"parameters":{"inputSource":"passthrough"},"type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1.1,"position":[-640,0],"id":"0da371d9-f717-4c78-90ff-7c249f4fe4d3","name":"Task"},{"parameters":{"assignments":{"assignments":[{"id":"6e5a68fe-ec84-4bdc-83cc-6484b53d3de8","name":"data","value":"={{ $json.data?.parseJson() }}","type":"object"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-256,0],"id":"d322aa6d-0c82-47c8-8d5c-25f76bb78839","name":"ParseInfo"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"aad4889d-9744-4693-bcfd-8750007a8684","leftValue":"={{ $json.data?.status }}","rightValue":"success","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}},{"id":"981ae033-e53a-45c0-ae34-171d054ddad5","leftValue":"={{ $json.data?.result?.budget }}","rightValue":"","operator":{"type":"string","operation":"notEmpty","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-80,0],"id":"ff1a5a85-7978-4cfc-a4d9-9ea33063a72d","name":"HasOrder"}],"connections":{"Execute a SQL query":{"main":[[{"node":"status = true","type":"main","index":0}]]},"status = true":{"main":[[{"node":"Close Order","type":"main","index":0}],[{"node":"Add Error","type":"main","index":0}]]},"Task":{"main":[[{"node":"Get Order Info","type":"main","index":0}]]},"Get Order Info":{"main":[[{"node":"ParseInfo","type":"main","index":0}]]},"ParseInfo":{"main":[[{"node":"HasOrder","type":"main","index":0}]]},"HasOrder":{"main":[[{"node":"Execute a SQL query","type":"main","index":0}],[{"node":"Add Error","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"Task":[{"json":{"client_id":"809200300","order_id":"559910506","state":"66449903"}}]},"versionId":"d8fbc585-2d38-4272-be04-0f48bb353679","triggerCount":0,"shared":[{"createdAt":"2025-10-04T11:08:32.250Z","updatedAt":"2025-10-04T11:08:32.250Z","role":"workflow:owner","workflowId":"inI5lJgGcwJ2gmYk","projectId":"vI2eXglKNLswvn2H"}],"tags":[]}